{"ast":null,"code":"var _jsxFileName = \"/home/angela/Escritorio/ADALAB/ejercicios-de-Adalab/modulo-react/3.2-1.5-counter/src/components/App.js\",\n    _s = $RefreshSig$();\n\n// Fichero src/components/App.js\n// Importamos useState desde React porque lo vamos a necesitar más abajo\nimport { useState } from 'react'; // Creamos la función o componente App. Esta vez lo creamos con una función arrow.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Creamos la constante de estado numberA y la función para modificarla setNumberA.\n  // El valor inicial que va a tener numberA es 0.\n  const [numberA, setNumberA] = useState(0); // Creamos la constante de estado numberB y la función para modificarla setNumberB.\n  // El valor inicial que va a tener numberB también es 0.\n\n  const [numberB, setNumberB] = useState(0); // Creamos una función manejadora que se ejecutará cuando la usuaria cambie el input del primer número.\n\n  const handleNumberA = ev => {\n    // Cogemos el valor del input del primer número.\n    const inputValue = ev.target.value; // Ejecutamos la función setNumberA para actualizar el valor del estado numberA.\n    // Cuando ejecutamos la función setNumberA, React guarda el valor del input en la constante numberA y re-renderiza la página.\n    // Esta función no la hemos creado nosotras, nos la ha creado React al utilizar el useState.\n\n    setNumberA(inputValue);\n  }; // Creamos una función manejadora que se ejecutará cuando la usuaria cambie el input del segundo número.\n\n\n  const handleNumberB = ev => {\n    const inputValueB = ev.target.value; // Hacemos lo mismo que en la función manejadora anterior, pero con setNumberB y en una sola línea.\n\n    setNumberB(inputValueB);\n  }; // Creamos la constante total con la suma de los dos números.\n  // Esta línea de código es JS normal y corriente, no tiene nada que ver con React.\n\n\n  const total = parseInt(numberA) + parseInt(numberB); // Retornamos todo el código HTML que queremos que React pinte en la página.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"La calculadora:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Escribe un n\\xFAmero:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"name\",\n          onChange: handleNumberA\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Escribe otro n\\xFAmero:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"email\",\n          onChange: handleNumberB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"La suma de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: numberA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this), \" y \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: numberB\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 49\n      }, this), \" es\", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"VbAbA694wr4TTTdmRwX9GY7Qqeg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/angela/Escritorio/ADALAB/ejercicios-de-Adalab/modulo-react/3.2-1.5-counter/src/components/App.js"],"names":["useState","App","numberA","setNumberA","numberB","setNumberB","handleNumberA","ev","inputValue","target","value","handleNumberB","inputValueB","total","parseInt"],"mappings":";;;AAAA;AACA;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CAAD,CAAtC,CAHgB,CAIhB;AACA;;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,CAAD,CAAtC,CANgB,CAQhB;;AACA,QAAMM,aAAa,GAAGC,EAAE,IAAI;AAC1B;AACA,UAAMC,UAAU,GAAGD,EAAE,CAACE,MAAH,CAAUC,KAA7B,CAF0B,CAG1B;AACA;AACA;;AACAP,IAAAA,UAAU,CAACK,UAAD,CAAV;AACD,GAPD,CATgB,CAkBhB;;;AACA,QAAMG,aAAa,GAAGJ,EAAE,IAAI;AAC1B,UAAMK,WAAW,GAAGL,EAAE,CAACE,MAAH,CAAUC,KAA9B,CAD0B,CAE1B;;AACAL,IAAAA,UAAU,CAACO,WAAD,CAAV;AACD,GAJD,CAnBgB,CAyBhB;AACA;;;AACA,QAAMC,KAAK,GAAGC,QAAQ,CAACZ,OAAD,CAAR,GAAoBY,QAAQ,CAACV,OAAD,CAA1C,CA3BgB,CA6BhB;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,yDAGE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,MAA1B;AAAiC,UAAA,QAAQ,EAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,2DAGE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,OAA1B;AAAkC,UAAA,QAAQ,EAAEK;AAA5C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAcE;AAAA,6CAEa;AAAA,kBAAST;AAAT;AAAA;AAAA;AAAA;AAAA,cAFb,sBAE0C;AAAA,kBAASE;AAAT;AAAA;AAAA;AAAA;AAAA,cAF1C,sBAIE;AAAA,wBAAUS,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CArDD;;GAAMZ,G;;KAAAA,G;AAuDN,eAAeA,GAAf","sourcesContent":["// Fichero src/components/App.js\n// Importamos useState desde React porque lo vamos a necesitar más abajo\nimport { useState } from 'react';\n\n// Creamos la función o componente App. Esta vez lo creamos con una función arrow.\nconst App = () => {\n  // Creamos la constante de estado numberA y la función para modificarla setNumberA.\n  // El valor inicial que va a tener numberA es 0.\n  const [numberA, setNumberA] = useState(0);\n  // Creamos la constante de estado numberB y la función para modificarla setNumberB.\n  // El valor inicial que va a tener numberB también es 0.\n  const [numberB, setNumberB] = useState(0);\n\n  // Creamos una función manejadora que se ejecutará cuando la usuaria cambie el input del primer número.\n  const handleNumberA = ev => {\n    // Cogemos el valor del input del primer número.\n    const inputValue = ev.target.value;\n    // Ejecutamos la función setNumberA para actualizar el valor del estado numberA.\n    // Cuando ejecutamos la función setNumberA, React guarda el valor del input en la constante numberA y re-renderiza la página.\n    // Esta función no la hemos creado nosotras, nos la ha creado React al utilizar el useState.\n    setNumberA(inputValue);\n  };\n\n  // Creamos una función manejadora que se ejecutará cuando la usuaria cambie el input del segundo número.\n  const handleNumberB = ev => {\n    const inputValueB = ev.target.value;\n    // Hacemos lo mismo que en la función manejadora anterior, pero con setNumberB y en una sola línea.\n    setNumberB(inputValueB);\n  };\n\n  // Creamos la constante total con la suma de los dos números.\n  // Esta línea de código es JS normal y corriente, no tiene nada que ver con React.\n  const total = parseInt(numberA) + parseInt(numberB);\n\n  // Retornamos todo el código HTML que queremos que React pinte en la página.\n  return (\n    <div>\n      <h1>La calculadora:</h1>\n      <form>\n        <label>\n          Escribe un número:\n          {/* En esta línea indicamos que cuando cambie el input se ejecute la función manejadora handleNumberA */}\n          <input type=\"number\" name=\"name\" onChange={handleNumberA} />\n        </label>\n        <label>\n          Escribe otro número:\n          {/* En esta línea indicamos que cuando cambie el input se ejecute la función manejadora handleNumberB */}\n          <input type=\"number\" name=\"email\" onChange={handleNumberB} />\n        </label>\n      </form>\n      <p>\n        {/* En esta línea usamos las constantes numberA y numberB creadas con el estado de React para pintar el HTML. */}\n        La suma de <strong>{numberA}</strong> y <strong>{numberB}</strong> es\n        {/* En esta línea usamos la constante total que hemos creado por nosotras para pintar el HTML. */}\n        <strong> {total}</strong>.\n      </p>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}